{"ast":null,"code":"import { CartActionTypes } from './cart.actionTypes';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\nconst INITIAL_STATE = {\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.CART_ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CART_CLEAR_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    case CartActionTypes.CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/adi/Desktop/developer/HomeBrew_Frontend/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","cartItems","cartReducer","state","action","type","CART_ADD_ITEM","payload","CART_CLEAR_ITEM","filter","cartItem","id","CART_REMOVE_ITEM"],"mappings":"AAAA,SAASA,eAAT,QAAgC,oBAAhC;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE;AADS,CAAtB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,eAAe,CAACS,aAArB;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,SAAS,EAAEH,aAAa,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACG,OAAzB;AAFnB,OAAP;;AAIF,SAAKV,eAAe,CAACW,eAArB;AACE,aAAO,EACL,GAAGL,KADE;AAELF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBQ,MAAhB,CACRC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBP,MAAM,CAACG,OAAP,CAAeI,EADpC;AAFN,OAAP;;AAMF,SAAKd,eAAe,CAACe,gBAArB;AACE,aAAO,EACL,GAAGT,KADE;AAELF,QAAAA,SAAS,EAAEF,kBAAkB,CAACI,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACG,OAAzB;AAFxB,OAAP;;AAIF;AACE,aAAOJ,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,eAAeD,WAAf","sourcesContent":["import { CartActionTypes } from './cart.actionTypes';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\n\nconst INITIAL_STATE = {\n  cartItems: [],\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.CART_ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload),\n      };\n    case CartActionTypes.CART_CLEAR_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          (cartItem) => cartItem.id !== action.payload.id\n        ),\n      };\n    case CartActionTypes.CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}