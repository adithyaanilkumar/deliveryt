{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { GoogleAuthProvider, getAuth, signInWithPopup, signInWithRedirect, signInWithEmailAndPassword, createUserWithEmailAndPassword, sendPasswordResetEmail, signOut } from \"firebase/auth\";\nimport { getFirestore, query, getDocs, collection, where, addDoc } from \"firebase/firestore\"; // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAOopglodn3QjnKQ6X-Dys5BfogXGdLnok\",\n  authDomain: \"homebrew-6730e.firebaseapp.com\",\n  projectId: \"homebrew-6730e\",\n  storageBucket: \"homebrew-6730e.appspot.com\",\n  messagingSenderId: \"819412540898\",\n  appId: \"1:819412540898:web:7eaf95f96ae984dc45edbb\",\n  measurementId: \"G-LLVPTDESXH\"\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst googleProvider = new GoogleAuthProvider();\n\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    console.log(err.message);\n    alert(err.message);\n  }\n};\n\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordReset = async email => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logout = () => {\n  signOut(auth);\n};\n\nexport { auth, db, signInWithGoogle, logInWithEmailAndPassword, registerWithEmailAndPassword, sendPasswordReset, logout };","map":{"version":3,"sources":["/Users/adi/Desktop/developer/HomeBrew_Frontend/src/fireabse.js"],"names":["initializeApp","GoogleAuthProvider","getAuth","signInWithPopup","signInWithRedirect","signInWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","signOut","getFirestore","query","getDocs","collection","where","addDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","db","googleProvider","signInWithGoogle","res","user","q","uid","docs","length","name","displayName","authProvider","email","err","console","error","log","message","alert","logInWithEmailAndPassword","password","registerWithEmailAndPassword","sendPasswordReset","logout"],"mappings":"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","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  GoogleAuthProvider,\n  getAuth,\n  signInWithPopup,\n  signInWithRedirect,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAOopglodn3QjnKQ6X-Dys5BfogXGdLnok\",\n  authDomain: \"homebrew-6730e.firebaseapp.com\",\n  projectId: \"homebrew-6730e\",\n  storageBucket: \"homebrew-6730e.appspot.com\",\n  messagingSenderId: \"819412540898\",\n  appId: \"1:819412540898:web:7eaf95f96ae984dc45edbb\",\n  measurementId: \"G-LLVPTDESXH\"\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email,\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    console.log(err.message);\n    alert(err.message);\n  }\n};\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email,\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst sendPasswordReset = async (email) => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\nconst logout = () => {\n  signOut(auth);\n};\nexport {\n  auth,\n  db,\n  signInWithGoogle,\n  logInWithEmailAndPassword,\n  registerWithEmailAndPassword,\n  sendPasswordReset,\n  logout,\n};"]},"metadata":{},"sourceType":"module"}