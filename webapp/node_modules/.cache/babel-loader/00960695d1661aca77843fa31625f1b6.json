{"ast":null,"code":"var _jsxFileName = \"/Users/adi/Desktop/developer/HomeBrew_Frontend/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { auth, logInWithEmailAndPassword, signInWithGoogle } from \"../../fireabse\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport \"./Login.css\";\nimport Loading from \"../Loading/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (loading) {\n      console.log(\"loading...\"); // maybe trigger a loading screen\n\n      setIsLoading(true);\n      return;\n    }\n\n    if (user) {\n      setIsLoading(false);\n      navigate.push(\"/\");\n    }\n\n    if (!loading) {\n      setIsLoading(false);\n      return;\n    }\n  }, [user, loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 20\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Login, \"RKHE3DIyCWl+IHlk6vweTQ3ab7c=\", false, function () {\n  return [useAuthState, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/adi/Desktop/developer/HomeBrew_Frontend/src/components/Login/Login.js"],"names":["React","useEffect","useState","Link","useHistory","auth","logInWithEmailAndPassword","signInWithGoogle","useAuthState","Loading","Login","email","setEmail","password","setPassword","user","loading","error","navigate","isLoading","setIsLoading","console","log","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,IAAT,EAAeC,yBAAf,EAA0CC,gBAA1C,QAAkE,gBAAlE;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AACA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,EAAgBC,KAAhB,IAAyBT,YAAY,CAACH,IAAD,CAA3C;AACA,QAAMa,QAAQ,GAAGd,UAAU,EAA3B;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,OAAJ,EAAa;AACXK,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EADW,CAEX;;AACAF,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACD;;AACD,QAAIL,IAAJ,EAAS;AACPK,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,QAAQ,CAACK,IAAT,CAAc,GAAd;AACD;;AACD,QAAI,CAACP,OAAL,EAAc;AACZI,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;AACD;AACF,GAfQ,EAeN,CAACL,IAAD,EAAOC,OAAP,CAfM,CAAT;AAgBA,sBACA;AAAA,eAEMG,SAAS,iBAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFjB,EAKM,CAACA,SAAD,iBAAY,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAWD;;GAjCQT,K;UAGwBF,Y,EACdJ,U;;;KAJVM,K;AAkCT,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { auth, logInWithEmailAndPassword, signInWithGoogle } from \"../../fireabse\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport \"./Login.css\";\nimport Loading from \"../Loading/Loading\";\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useHistory();\n  const [isLoading, setIsLoading] = useState(false)\n  useEffect(() => {\n    if (loading) {\n      console.log(\"loading...\")\n      // maybe trigger a loading screen\n      setIsLoading(true)\n      return ;\n    }\n    if (user){ \n      setIsLoading(false)\n      navigate.push(\"/\");\n    }\n    if (!loading) {\n      setIsLoading(false)\n      return ;\n    }\n  }, [user, loading]);\n  return (\n  <div>\n    {   \n        isLoading&&<Loading/>\n    }\n    {   \n        !isLoading&&<Loading/>\n    }\n    \n  </div>\n  );\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}